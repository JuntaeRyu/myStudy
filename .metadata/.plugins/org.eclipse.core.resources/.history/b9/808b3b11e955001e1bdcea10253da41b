package com.ryu.app;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;

public class BoardDAO {

	// 의존 관계(멤버변수)
	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	// 응집도를 높여주기
	private final String SELECTALL="SELECT * FROM BOARD";
	private final String SELECTONE="SELECT * FROM BOARD WHERE MID=?";
	private final String INSERT="INSERT INTO MEMEBR (MID, MPW) VALUE (?, ?)";
	private final String UPDATE="UPDATE BOARD SET MPW=? WHERE MID=?";
	private final String DELETE="DELETE FROM BOARD WHERE MID=?";
	
	
	public List<BoardDTO> selectAll(BoardDTO bDTO){
		// 반복적인 로직을 대신 수행하는 "템플릿 패턴"을 활용
//		jdbcTemplate.query(query문, new 받아올클래스타입)
		jdbcTemplate.query(SELECTALL, new BeanPropertyRowMapper<BoardDTO>(BoardDTO.class));
		return null;
	}
	public BoardDTO selectOne(BoardDTO bDTO){
		Object args[]= {bDTO.getBid()};
		return jdbcTemplate.queryForObject(SELECTONE, args, new BeanPropertyRowMapper<BoardDTO>(BoardDTO.class));
		
	}
	public boolean insert(BoardDTO bDTO) {
		jdbcTemplate.update(INSERT,bDTO.getMid(), bDTO.getMpw());
		return false;
	}
	public boolean update(BoardDTO bDTO) {
		jdbcTemplate.update(UPDATE, bDTO.getContent(), bDTO.getBid());
		return false;
	}
	public boolean delete(BoardDAO bDTO) {
		jdbcTemplate.update(DELETE, bDTO.getMid());
		return false;
	}
	
}
